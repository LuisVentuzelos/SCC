apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    viter.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      viter.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        viter.network/viternetwork: "true"
        viter.service: db
    spec:
      containers:
        - env:
            - name: APP_PWD
              valueFrom:
                configMapKeyRef:
                  key: APP_PWD
                  name: env
            - name: APP_USER
              valueFrom:
                configMapKeyRef:
                  key: APP_USER
                  name: env
            - name: DB_COLLECTION_NAME
              valueFrom:
                configMapKeyRef:
                  key: DB_COLLECTION_NAME
                  name: env
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: DB_NAME
                  name: env
            - name: MONGO_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  key: MONGO_HOSTNAME
                  name: env
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MONGO_INITDB_ROOT_PASSWORD
                  name: env
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: MONGO_INITDB_ROOT_USERNAME
                  name: env
            - name: MONGO_PORT
              valueFrom:
                configMapKeyRef:
                  key: MONGO_PORT
                  name: env
          image: mongo
          name: db
          ports:
            - containerPort: 27017
          resources: {}
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: db-claim0
            - mountPath: /home/mongodb
              name: db-claim1
            - mountPath: /home/mongodb/seed
              name: db-claim2
            - mountPath: /data/db
              name: db-claim3
      restartPolicy: Always
      volumes:
        - name: db-claim0
          persistentVolumeClaim:
            claimName: db-claim0
        - name: db-claim1
          persistentVolumeClaim:
            claimName: db-claim1
        - name: db-claim2
          persistentVolumeClaim:
            claimName: db-claim2
        - name: db-claim3
          persistentVolumeClaim:
            claimName: db-claim3
status: {}
